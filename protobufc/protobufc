# built command with check enable (take a long time to process)
# sudo docker build --build-arg CHECK=1 -t protobufc -f ./protobufc .
# sudo podman build --build-arg CHECK=1 -t protobufc -f ./protobufc .
# built command without check
# sudo docker build --rm --no-cache --squash --build-arg CHECK=0 -t protobufc -f ./protobufc .
# sudo podman build --rm --no-cache --squash-all --build-arg CHECK=0 -t protobufc -f ./protobufc .

# This is protobuf-c, a C implementation of the Google Protocol Buffers data serialization format.
# Support amd64 and arm64 architecture
# Last update: 23/04/2022 01:05:00

FROM vpolaris/librairies:libbsd as libbsd
FROM vpolaris/librairies:openssl as openssl
FROM vpolaris/librairies:protobuf as protobuf
FROM vpolaris/librairies:devtools as protobufc-dependencies

COPY --from=libbsd / /    
COPY --from=openssl / /
COPY --from=protobuf / /

FROM protobufc-dependencies as protobufc-clone
ARG NAME="protobufc"
ARG SRC_DIRECTORY="/tmp/${NAME}"
ARG VERSION="latest"

RUN git clone https://github.com/protobuf-c/protobuf-c  "${SRC_DIRECTORY}" \
    && cd "/tmp/${NAME}" \
    && if [[ "${VERSION}" == "latest" ]];then \
        VERSION=$(git describe --tags $(git rev-list --tags --max-count=1)) \
    ;fi \
    && touch "/etc/compiled_versions/${NAME}.${VERSION}" \
    && git checkout "${VERSION}" \
    && git submodule update --init --recursive

FROM protobufc-clone as protobufc-compile
ARG NAME="protobufc"
ARG SRC_DIRECTORY="/tmp/${NAME}"
ENV PKG_CONFIG_PATH=/usr/lib64/pkgconfig
ARG CHECK=0
# ARG CFLAGS="-I/usr/local/libev/include/"
# ARG CXXFLAGS='-I/usr/local/libev/include'
# ARG LIBS="-L/usr/local/libev/lib"
# ARG LDFLAGS="-L/usr/local/libev/lib"

RUN mkdir "/usr/local/${NAME}" \
    && ldconfig \
    &&  cd "${SRC_DIRECTORY}" \
    && ./autogen.sh \
    && ./configure --disable-static --with-pic --with-gnu-ld --prefix="/usr/local/${NAME}" \
    && make -j "$(nproc)" \
    && if [ ${CHECK} -eq 1 ];then make check; fi \
    && make install \
    && echo "/usr/local/${NAME}/lib" | tee "/etc/ld.so.conf.d/${NAME}.conf"
    
FROM scratch
ARG NAME="protobufc"
COPY --from=protobufc-compile "/usr/local/${NAME}" "/usr/local/${NAME}"
COPY --from=protobufc-compile "/etc/compiled_versions" "/etc/compiled_versions"
COPY --from=protobufc-compile "/usr/local/${NAME}/lib/pkgconfig/*" "/usr/lib64/pkgconfig/"
COPY --from=protobufc-compile "/etc/ld.so.conf.d/${NAME}.conf" "/etc/ld.so.conf.d/${NAME}.conf"